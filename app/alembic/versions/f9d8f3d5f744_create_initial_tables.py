"""create initial tables

Revision ID: f9d8f3d5f744
Revises:
Create Date: 2025-09-29 21:34:28.821370

"""

from typing import Sequence, Union

import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision: str = "f9d8f3d5f744"
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "ai_scores",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("ticker", sa.String(), nullable=True),
        sa.Column("company_name", sa.String(), nullable=False),
        sa.Column("cik", sa.String(), nullable=True),
        sa.Column("sector", sa.String(), nullable=True),
        sa.Column("industry", sa.String(), nullable=True),
        sa.Column("description", sa.Text(), nullable=True),
        sa.Column("market_cap", sa.Float(), nullable=True),
        sa.Column("enterprise_value", sa.Float(), nullable=True),
        sa.Column("employees", sa.Integer(), nullable=True),
        sa.Column("website", sa.String(), nullable=True),
        sa.Column("logo_url", sa.String(), nullable=True),
        sa.Column("beta", sa.Float(), nullable=True),
        sa.Column("recommendation_key", sa.String(), nullable=True),
        sa.Column("recommendation_mean", sa.Float(), nullable=True),
        sa.Column("hq_city", sa.String(), nullable=True),
        sa.Column("hq_state", sa.String(), nullable=True),
        sa.Column("filter_decision", sa.Boolean(), nullable=True),
        sa.Column("filter_reason", sa.Text(), nullable=True),
        sa.Column("pure_play_score", sa.Float(), nullable=True),
        sa.Column("product_integration_score", sa.Float(), nullable=True),
        sa.Column("research_focus_score", sa.Float(), nullable=True),
        sa.Column("partnership_score", sa.Float(), nullable=True),
        sa.Column("final_score", sa.Float(), nullable=True),
        sa.Column("reasoning_pure_play", sa.Text(), nullable=True),
        sa.Column("reasoning_product_integration", sa.Text(), nullable=True),
        sa.Column("reasoning_research_focus", sa.Text(), nullable=True),
        sa.Column("reasoning_partnership", sa.Text(), nullable=True),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=True,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=True,
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_ai_scores_cik"), "ai_scores", ["cik"], unique=False)
    op.create_index(
        op.f("ix_ai_scores_company_name"), "ai_scores", ["company_name"], unique=False
    )
    op.create_index(
        op.f("ix_ai_scores_filter_decision"),
        "ai_scores",
        ["filter_decision"],
        unique=False,
    )
    op.create_index(op.f("ix_ai_scores_id"), "ai_scores", ["id"], unique=False)
    op.create_index(op.f("ix_ai_scores_ticker"), "ai_scores", ["ticker"], unique=True)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f("ix_ai_scores_ticker"), table_name="ai_scores")
    op.drop_index(op.f("ix_ai_scores_id"), table_name="ai_scores")
    op.drop_index(op.f("ix_ai_scores_filter_decision"), table_name="ai_scores")
    op.drop_index(op.f("ix_ai_scores_company_name"), table_name="ai_scores")
    op.drop_index(op.f("ix_ai_scores_cik"), table_name="ai_scores")
    op.drop_table("ai_scores")
    # ### end Alembic commands ###
