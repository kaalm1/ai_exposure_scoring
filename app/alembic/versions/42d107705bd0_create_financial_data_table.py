"""create financial data table

Revision ID: 42d107705bd0
Revises: 41b55c3987b1
Create Date: 2025-10-11 23:06:39.693385

"""

from typing import Sequence, Union

import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision: str = "42d107705bd0"
down_revision: Union[str, Sequence[str], None] = "41b55c3987b1"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "financial_data",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("ai_score_id", sa.Integer(), nullable=False),
        sa.Column("ticker", sa.String(), nullable=False),
        sa.Column("cik", sa.String(), nullable=False),
        sa.Column("data_type", sa.String(), nullable=False),
        sa.Column("filing_date", sa.Date(), nullable=False),
        sa.Column("fiscal_year", sa.Integer(), nullable=True),
        sa.Column("fiscal_period", sa.String(), nullable=True),
        sa.Column("period_end_date", sa.Date(), nullable=True),
        sa.Column("pe_ratio", sa.Float(), nullable=True),
        sa.Column("ev_to_ebitda", sa.Float(), nullable=True),
        sa.Column("price_to_sales", sa.Float(), nullable=True),
        sa.Column("price_to_book", sa.Float(), nullable=True),
        sa.Column("peg_ratio", sa.Float(), nullable=True),
        sa.Column("revenue_growth", sa.Float(), nullable=True),
        sa.Column("net_income_growth", sa.Float(), nullable=True),
        sa.Column("ebitda_growth", sa.Float(), nullable=True),
        sa.Column("eps_growth", sa.Float(), nullable=True),
        sa.Column("free_cash_flow_growth", sa.Float(), nullable=True),
        sa.Column("gross_margin", sa.Float(), nullable=True),
        sa.Column("operating_margin", sa.Float(), nullable=True),
        sa.Column("net_profit_margin", sa.Float(), nullable=True),
        sa.Column("roe", sa.Float(), nullable=True),
        sa.Column("roa", sa.Float(), nullable=True),
        sa.Column("total_assets", sa.Float(), nullable=True),
        sa.Column("total_liabilities", sa.Float(), nullable=True),
        sa.Column("total_equity", sa.Float(), nullable=True),
        sa.Column("cash_and_equivalents", sa.Float(), nullable=True),
        sa.Column("total_debt", sa.Float(), nullable=True),
        sa.Column("operating_cash_flow", sa.Float(), nullable=True),
        sa.Column("cash_flow_positive", sa.Boolean(), nullable=True),
        sa.Column("free_cash_flow", sa.Float(), nullable=True),
        sa.Column("debt_to_equity", sa.Float(), nullable=True),
        sa.Column("current_ratio", sa.Float(), nullable=True),
        sa.Column("quick_ratio", sa.Float(), nullable=True),
        sa.Column("asset_turnover", sa.Float(), nullable=True),
        sa.Column("inventory_turnover", sa.Float(), nullable=True),
        sa.Column("market_cap", sa.Float(), nullable=True),
        sa.Column("enterprise_value", sa.Float(), nullable=True),
        sa.Column("current_price", sa.Float(), nullable=True),
        sa.Column("beta", sa.Float(), nullable=True),
        sa.Column("dividend_yield", sa.Float(), nullable=True),
        sa.Column("previous_close", sa.Float(), nullable=True),
        sa.Column("fifty_two_week_high", sa.Float(), nullable=True),
        sa.Column("fifty_two_week_low", sa.Float(), nullable=True),
        sa.Column("revenue", sa.Float(), nullable=True),
        sa.Column("net_income", sa.Float(), nullable=True),
        sa.Column("ebitda", sa.Float(), nullable=True),
        sa.Column("shares_outstanding", sa.Float(), nullable=True),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=True,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=True,
        ),
        sa.ForeignKeyConstraint(
            ["ai_score_id"],
            ["ai_scores.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_financial_data_ai_score_id"),
        "financial_data",
        ["ai_score_id"],
        unique=False,
    )
    op.create_index(
        op.f("ix_financial_data_cik"), "financial_data", ["cik"], unique=False
    )
    op.create_index(
        op.f("ix_financial_data_filing_date"),
        "financial_data",
        ["filing_date"],
        unique=False,
    )
    op.create_index(
        op.f("ix_financial_data_fiscal_year"),
        "financial_data",
        ["fiscal_year"],
        unique=False,
    )
    op.create_index(
        op.f("ix_financial_data_id"), "financial_data", ["id"], unique=False
    )
    op.create_index(
        op.f("ix_financial_data_ticker"), "financial_data", ["ticker"], unique=False
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f("ix_financial_data_ticker"), table_name="financial_data")
    op.drop_index(op.f("ix_financial_data_id"), table_name="financial_data")
    op.drop_index(op.f("ix_financial_data_fiscal_year"), table_name="financial_data")
    op.drop_index(op.f("ix_financial_data_filing_date"), table_name="financial_data")
    op.drop_index(op.f("ix_financial_data_cik"), table_name="financial_data")
    op.drop_index(op.f("ix_financial_data_ai_score_id"), table_name="financial_data")
    op.drop_table("financial_data")
    # ### end Alembic commands ###
